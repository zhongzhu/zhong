/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyPlan.controller.MyController', {
    extend: 'Ext.app.Controller',

    requires: [
        'Ext.MessageBox',
        'Ext.ActionSheet'
    ],

    config: {
        refs: {
            addPlanButton: 'mainview #addPlanButton',
            mainView: 'mainview',
            addPlanButton: 'mainview #addPlanButton',
            planList: 'mainview #planList',
            deletePlanButton: 'planview #deletePlanButton'
        },

        control: {
            "addPlanButton": {
                tap: 'onAddPlanTap'
            },
            "mainview #planList": {
                disclose: 'onPlanDisclose'
            },
            "mainview #savePlanButton": {
                tap: 'onSaveTap'
            },
            "planList": {
                show: 'onListShow'
            },
            "deletePlanButton": {
                tap: 'onDeleteButtonTap'
            }
        }
    },

    onAddPlanTap: function(button, e, eOpts) {
        var mainView = this.getMainView();
        this.getAddPlanButton().hide();
        mainView.push({
            xtype: 'planview',
            title: 'A New Plan'
        });

        this.getDeletePlanButton().hide();
    },

    onPlanDisclose: function(list, record, target, index, e, eOpts) {
        var mainView = this.getMainView();
        this.getAddPlanButton().hide();
        mainView.push({
            xtype: 'planview',
            title: record.get('title'),
            record: record
        });
        this.getDeletePlanButton().show();
    },

    onSaveTap: function(button, e, eOpts) {
        var mainView = this.getMainView(),
            planView = button.up('planview'),
            store = Ext.getStore('MyStore'),
            values = planView.getValues(),
            record = planView.getRecord();
        if (values.id === '') {
            console.log('add a new plan');
            store.add(values);
        } else {
            console.log('update a plan');
            record.setData(values);
            record.setDirty();
        }

        store.sync();

        mainView.pop();
    },

    onListShow: function(component, eOpts) {
        this.getAddPlanButton().show();
    },

    onDeleteButtonTap: function(button, e, eOpts) {
        console.log('delete a plan');
        var mainView = this.getMainView(),
            planView = button.up('plantview'),
            store = Ext.getStore('MyStore'),
            record = planView.getRecord();

        store.remove(record);
        store.sync();

        mainView.pop();
    }

});